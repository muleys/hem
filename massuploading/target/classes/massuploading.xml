<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <file:connector name="File" autoDelete="false" streaming="true" validateConnections="true" pollingFrequency="50000" doc:name="File"/>
    <validation:config name="Validation_Configuration" doc:name="Validation Configuration"/>
    <sfdc:config name="Salesforce__Basic_Authentication" username="hemanth.gadde@stericycle.com.sfdcdev1" password="Indiaindia9" url="https://test.salesforce.com/services/Soap/u/37.0" doc:name="Salesforce: Basic Authentication"/>
    <flow name="massuploadingFlow">
        <file:inbound-endpoint path="C:\Dev\steri\inbound" connector-ref="File" pollingFrequency="15000" responseTimeout="10000" doc:name="File" metadata:id="a5b9acce-29ac-4733-b7c5-9580f552b791"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="4d074e69-4259-4a3e-b1ac-fcf1047e34c6">
            <dw:input-payload mimeType="application/csv" doc:sample="C:\Users\anshumishra\Downloads\mass upload test data from kumar.csv"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	Account__c: payload01.Account,
	(Case_by_case_pricing__c: payload01."Case-by-case pricing" as :boolean) when (payload01."Case-by-case pricing" != null and payload01."Case-by-case pricing" != ""),
	Customer_Price_Book__c: payload01."Customer Price Book",
	Item_Description__c: payload01."Item Description",
	(Price__c: payload01.Price as :string) when (payload01.Price != null and payload01.Price != ""),
	Product_Family__c: payload01."Product Family",
	Product__c: payload01.Product,
	Profile_Price_Entry_Description__c: payload01."Profile Price Entry Description",
	(Profile_Special_Pricing__c: payload01."Profile Special Pricing" as :boolean) when (payload01."Profile Special Pricing" != null and payload01."Profile Special Pricing" != ""), 
	Stericycle_Location__c: payload01."Pricing Location",
	UOM__c: payload01.UOM,
	Waste_Profile__c: payload01."Waste Profile",
	Project_Id__c: payload01."Project Id",
	Contract_Id__c: payload01."Contract Id",
	Threshold_Price__c: payload01."Threshold Price",
	(Subscription_Price__c: payload01."Subscription Price" as :string) when (payload01."Subscription Price" != null and payload01."Subscription Price" != ""),
	(Minimum_Price__c: payload01."Minimum Price" as :string) when (payload01."Minimum Price" != null and payload01."Minimum Price" != ""),
	(Minimum_Bill_Qty__c: payload01."Minimum Bill Qty" as :number) when (payload01."Minimum Bill Qty" != null and payload01."Minimum Bill Qty" != ""),
	(Active__c: payload01.Active as :boolean) when (payload01.Active != null and payload01.Active != ""),
	Pricing_Applied__c: payload01."Pricing Applied",
	Minimum_Type__c: payload01."Minimum Type",
	(Current_Threshold_Value__c: payload01."Current Threshold Value" as :number) when (payload01."Current Threshold Value" != null and payload01."Current Threshold Value" != ""),
	Source__c: payload01.Source,
	(Verified__c: payload01.Verified as :boolean) when (payload01.Verified != null and payload01.Verified != ""),
	Expiration_Date__c: payload01."Expiration Date",
	Segment__c: payload01.Segment,
	Approved_Destination__c: payload01."Approved Destination",
	(SubscriptionPriceEndDate__c: payload01."Subscription Price End Date" as :number) when (payload01."Subscription Price End Date" != null and payload01."Subscription Price End Date" != ""),
	SubscriptionPriceStartDate__c: payload01."Subscription Price Start Date",
	SubscriptionType__c: payload01."Subscription Type",
	Contract__c: payload01.Contract,
	Project__c: payload01.Project,
	Programs__c: payload01.Programs,
	Threshold__c: payload01.Threshold
})]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="originalPayload" value="#[payload]" doc:name="Variable"/>
        <sfdc:create config-ref="Salesforce__Basic_Authentication" doc:name="Salesforce" type="Price_Book_Entry__c">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[payload[0].success=='true']">
                <smtp:outbound-endpoint host="localhost" responseTimeout="10000" doc:name="SMTP"/>
                <logger message="Email Notification Sent" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <logger message="Creation and Activation unsuccessful" level="INFO" doc:name="Logger"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/csv escape="null"
---
flowVars.originalPayload]]></dw:set-payload>
                </dw:transform-message>
                <file:outbound-endpoint path="C:\Dev\steri\error" outputPattern="#[message.inboundProperties.originalFilename]" connector-ref="File" responseTimeout="10000" doc:name="File"/>
            </otherwise>
        </choice>
    </flow>
</mule>
